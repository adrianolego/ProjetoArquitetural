##Servidor Web
server:
  port: 8081

eureka:
  client:
    serviceUrl:
      defaultZone: http://eurekaserver:8761/eureka/
  instance:
    preferIpAddress: false

  keycloak:
    realm: logisticaKeyCloak
    auth-server-url: http://127.0.0.1:8080/auth
    ssl-required: external
    #resource: demoapp
    credentials:
      secret: 11111111-1111-1111-1111-111111111111
    use-resource-role-mappings: true

#    securityConstraints[0]:
#      authRoles[0]: admin
#      authRoles[1]: user
#      securityCollections[0]:
#        name: insecure stuff
#        patterns[0]: /insecure
#
#    securityConstraints[1]:
#      authRoles[0]: admin
#      securityCollections[0]:
#        name: admin stuff
#        patterns[0]: /admin

config:
  #RabbitMQ message
  amq:
    hostname: localhost
    port: 5672
    username: guest
    password: guest

  calcularFrete:
    exchange: calcularFrete.exchange
    sendDLQQueue: calcularFrete.sendDLQQueue
    sendQueue: calcularFrete.sendQueue

  registrarEncomenda:
    exchange: registrarEncomenda.exchange
    sendDLQQueue: registrarEncomenda.sendDLQQueue
    sendQueue: registrarEncomenda.sendQueue

---
spring:
  profiles: docker-compose
config:
  amq:
    hostname: rabbitmq
    port: 5672
    username: guest
    password: guest

  eureka:
    client:
      serviceUrl:
        defaultZone: http://localhost:8761/eureka
    instance:
      preferIpAddress: true

  keycloak:
    realm: logisticaKeyCloak
    auth-server-url: http://127.0.0.1:8080/auth
    ssl-required: external
    #resource: demoapp
    credentials.secret: 11111111-1111-1111-1111-111111111111
    use-resource-role-mappings: true

